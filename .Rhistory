library("dplyr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
require("jsonlite")
require("RCurl")
require(tidyr)
require(dplyr)
require(ggplot2)
setwd("~/DataVisualization/DV_RProject3/01 Data")
file_path <- "Salary_Information_for_Industrial_Development_Agencies.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Base_Annualized_Salary","Actual_Salary_Paid","Overtime_Paid","Performance_Bonus","Extra_Pay","Other_Compensation","Total_Compensation")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
df %>% rename(Paid_by_State_or_Local_Government = Paid_by_State_or_Local_Gov)
df %>% rename(Paid_by_State_or_Local_Government= Paid_by_State_or_Local_Gov)
df %>% rename(Paid_by_State_or_Local_Gov= Paid_by_State_or_Local_Government)
names(df)
require(tidyr)
require(dplyr)
require(ggplot2)
df %>% rename(Paid_by_State_or_Local_Government= Paid_by_State_or_Local_Gov)
df %>% rename(Paid_by_State_or_Local_Government= "Paid_by_State_or_Local_Gov")
df %>% rename(Paid_by_State_or_Local_Gov= Paid_by_State_or_Local_Government)
head(df)
df %>% rename(Paid_by_State_or_Local_Gov= "Paid_by_State_or_Local_Government")
df %>% rename("Paid_by_State_or_Local_Gov"= Paid_by_State_or_Local_Government)
head(df)
df <- rename(df,Paid_by_State_or_Local_Gov=Paid_by_State_or_Local_Government)
head(df)
file_path <- "Salary_Information_for_Industrial_Development_Agencies.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
df <- rename(df,Paid_by_State_or_Local_Gov=Paid_by_State_or_Local_Government)
measures <- c("Base_Annualized_Salary","Actual_Salary_Paid","Overtime_Paid","Performance_Bonus","Extra_Pay","Other_Compensation","Total_Compensation")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
df <- rename(df,Paid_by_State_or_Local_Gov=Paid_by_State_or_Local_Government)
df <- rename(df,Grp = Group)
measures <- c("Base_Annualized_Salary","Actual_Salary_Paid","Overtime_Paid","Performance_Bonus","Extra_Pay","Other_Compensation","Total_Compensation")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
file_path <- "Salary_Information_for_Local_Development_Corporations.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
names(df)
df <- rename(df,Paid_by_State_or_Local_Gov=Paid_by_State_or_Local_Government)
df <- rename(df,Grp = Group)
measures <- c("Base_Annualized_Salary","Actual_Salary_Paid","Overtime_Paid","Performance_Bonus","Extra_Pay","Other_Compensation","Total_Compensation")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require("jsonlite")
require("RCurl")
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SInfoIndustrialA"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOINDUSTRIALA"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(df)
ldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOLOCALA"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(ldf)
ldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOLOCALC"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
ldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOLOCALC"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(ldf)
file_path <- "avg_loc_salary.csv"
idf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOINDUSTRIALA"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
names(df)
df <- rename(df,Grp = Group)
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Avg_Loc_Base_Anu_Salary","Avg_Loc_Act_Salary","Avg_Loc_Overtime","Avg_Loc_Bonus","Avg_Loc_Extra_Pay","Avg_Loc_Tot_Comp","Avg_Loc_Other_Comp")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
aldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from AVG_LOC_SALARY"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(aldf)
dplyr::left_join(idf,aldf,by="grp") %>% view()
names(aldf)
names(idf)
dplyr::left_join(idf,aldf,by="GRP") %>% view()
dplyr::left_join(idf,aldf,by="GRP")
dplyr::left_join(idf,aldf,by="GRP") %>% View
dplyr::left_join(idf,aldf,by="GRP") %>% select(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(MORE_THAN_AVG = between(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP,10000000000000)) %>% view
dplyr::left_join(idf,aldf,by="GRP") %>% select(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(MORE_THAN_AVG = between(AVG_LOC_TOT_COMP,10000000000000)) %>% view
dplyr::left_join(idf,aldf,by="GRP") %>% select(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(between(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP,10000000000000)) %>% view
dplyr::left_join(idf,aldf,by="GRP") %>% select(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% view
dplyr::left_join(idf,aldf,by="GRP") %>% select(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% view()
dplyr::left_join(idf,aldf,by="GRP") %>% select(TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION / AVG_LOC_TOT_COMP) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% as.numeric(as.character) %>% mutate(DIF = TOTAL_COMPENSATION / AVG_LOC_TOT_COMP) %>% tbl_df
TOTAL_COMPENSATION <- as.numeric(as.character(TOTAL_COMPENSATION)
TOTAL_COMPENSATION <- as.numeric(as.character(TOTAL_COMPENSATION))
TOTAL_COMPENSATION <- as.numeric(as.character(TOTAL_COMPENSATION))
idf %>% select(TOTAL_COMPENSATION) %>% as.numeric(as.character(TOTAL_COMPENSATION))
$ class
$ TOTAL_COMPENSATION
idf$TOTAL_COMPENSATION <- as.numeric(as.character(idf$TOTAL_COMPENSATION))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(DIF > 0) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIF)) + geom_bar()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIF = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIF)) + geom_bar(stat=identity)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_bar(stat=identity)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_bar()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_bar(stat=identity)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(DIFFAVG < 0) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_bar(stat=identity)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(DIFFAVG < 0) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(DIFFAVG > 0) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(DIFFAVG < 0) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(DIFFAVG > 0) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_area()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_dotplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_histogram()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_point()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
idf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOINDUSTRIALA"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
ldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from SINFOLOCALC"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
aldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from AVG_LOC_SALARY"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
idf$TOTAL_COMPENSATION <- as.numeric(as.character(idf$TOTAL_COMPENSATION))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference")
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference",title = "Industrial Development Workers Total Compensation Vs. Local Development Average Total Compensation") + theme(axis.text.x=element_text(angle=50,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference",title = "Industrial Development Workers Total Compensation Vs. Local Development Average Total Compensation") + theme(axis.text.x=element_text(angle=50,color="black"),axis.ticks.margin(10))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference",title = "Industrial Development Workers Total Compensation Vs. Local Development Average Total Compensation") + theme(axis.text.x=element_text(angle=50,color="black")) + theme(axis.ticks.margin(10))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference",title = "Industrial Development Workers Total Compensation Vs. Local Development Average Total Compensation") + theme(axis.text.x=element_text(angle=50,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference",title = "Industrial Development Workers Total Compensation Vs. Local Development Average Total Compensation")
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP != NULL) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x = "Group",y = "Difference",title = "Industrial Development Workers Total Compensation Vs. Local Development Average Total Compensation")
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP != NULL) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x="Group",y="Difference from Average of Local Development Compensation")
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-50,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-25,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-15,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG)) + geom_boxplot() + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot() + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(color = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(color="black"))
angle=-20,
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"),legend.keys.size(2))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black")) + theme(legend.key.size(5))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black")) + theme(legend.key.size=5)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black")) + theme(axis.ticks.margin=5)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black")) + theme(axis.ticks.margin=5in)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black")) + theme(axis.ticks.margin=5inches)
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG,colour=GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = DIFFAVG)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
GRP
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::inner_join(idf,aldf)
dplyr::inner_join(idf,aldf) %>% view
dplyr::inner_join(idf,aldf) %>% view()
dplyr::inner_join(idf,aldf) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
setwd("~/DataVisualization/DV_RProject3/01 Data")
library("dplyr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("lubridate", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
file_path <- "Actual_avg_loc_salary.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
names(df)
measures <- c("Avg_Loc_Base_Anu_Salary","Avg_Loc_Act_Salary","Avg_Loc_Overtime","Avg_Loc_Bonus","Avg_Loc_Extra_Pay","Avg_Loc_Tot_Comp","Avg_Loc_Other_Comp")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
file_path <- "Actual_avg_loc_salary.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
measures <- c("Avg_Loc_Base_Anu_Salary","Avg_Loc_Act_Salary","Avg_Loc_Overtime","Avg_Loc_Bonus","Avg_Loc_Extra_Pay","Avg_Loc_Tot_Comp","Avg_Loc_Other_Comp")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
dimensions
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
measures
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
file_path <- "Actual_avg_loc_salary.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
head(df)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("AVG_LOC_BASE_ANU_SALARY","AVG_LOC_ACT_SALARY","AVG_LOC_OVERTIME","AVG_LOC_BONUS","AVG_LOC_EXTRA_PAY","AVG_LOC_TOT_COMP","AVG_LOC_OTHER_COMP")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
aldf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from AVG_LOC_SALARY"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
idf$TOTAL_COMPENSATION <- as.numeric(as.character(idf$TOTAL_COMPENSATION))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
aldf
dplyr::left_join(idf,aldf,by="GRP") %>% view
dplyr::left_join(idf,aldf,by="GRP") %>% View()
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% tbl_df
idf$TOTAL_COMPENSATION <- as.numeric(as.character(idf$TOTAL_COMPENSATION))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% tbl_df
aldf$AVG_LOC_TOT_COMP <- as.numeric(as.character(aldf$AVG_LOC_TOT_COMP))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% tbl_df
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
dplyr::left_join(idf,aldf,by="GRP") %>% select(GRP,TOTAL_COMPENSATION,AVG_LOC_TOT_COMP) %>% mutate(DIFFAVG = TOTAL_COMPENSATION - AVG_LOC_TOT_COMP) %>% filter(GRP == c("Executive","Managerial","Administrative/Clerical","Professional","Operational","Technical/Engineering")) %>% ggplot(aes(x = GRP, y = DIFFAVG, colour = GRP)) + geom_boxplot(fill = "grey") + labs(x="Group",y="Difference from Average of Local Development Compensation") + theme(axis.text.x=element_text(angle=-20,color="black"))
